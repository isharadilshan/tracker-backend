paths:
  /expenses:
    # [GET] expenses
    get:
      tags:
      - expenses
      summary: Find all Expenses
      responses:
        200:
          description: 'OK'
        500:
          description: 'Server Error'

    # [POST] expenses
    post:
      tags:
      - expenses
      summary: Add Expense
      parameters:
      - name: body
        in: body
        description: Expense data
        required: true
        schema:
          $ref: '#/definitions/expenses'
      responses:
        201:
          description: 'Created'
        400:
          description: 'Bad Request'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

  /expenses/{id}:
    #[GET] expenses/id
    get:
      tags:
      - expenses
      summary: Find Expense By Id
      parameters:
      - name: id
        in: path
        description: Expense Id
        required: true
      responses:
        200:
          description: 'OK'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

    #[PUT] expenses/id
    put:
      tags:
      - expenses
      summary: Update Expense By Id
      parameters:
      - name: id
        in: path
        description: Expense Id
        required: true
      - name: body
        in: body
        description: Expense data
        required: true
        schema:
          $ref: '#/definitions/expenses'
      responses:
        200:
          description: 'OK'
        400:
          description: 'Bad Request'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'
    
    # [DELETE] expenses/id
    delete:
      tags:
      - expenses
      summary: Delete Expense By Id
      parameters:
      - name: id
        in: path
        description: Expense Id
        required: true
      responses:
        200:
          description: 'OK'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

  /todos:
    # [GET] todos
    get:
      tags:
      - todos
      summary: Find all ToDos
      responses:
        200:
          description: 'OK'
        500:
          description: 'Server Error'

    # [POST] todos
    post:
      tags:
      - todos
      summary: Add ToDo
      parameters:
      - name: body
        in: body
        description: ToDo data
        required: true
        schema:
          $ref: '#/definitions/todos'
      responses:
        201:
          description: 'Created'
        400:
          description: 'Bad Request'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

  /todos/{id}:
    #[GET] todos/id
    get:
      tags:
      - todos
      summary: Find ToDo By Id
      parameters:
      - name: id
        in: path
        description: ToDo Id
        required: true
      responses:
        200:
          description: 'OK'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

    #[PUT] todos/id
    put:
      tags:
      - todos
      summary: Update ToDo By Id
      parameters:
      - name: id
        in: path
        description: ToDo Id
        required: true
      - name: body
        in: body
        description: ToDo data
        required: true
        schema: 
          $ref: '#/definitions/todos'
      responses:
        200:
          description: 'OK'
        400:
          description: 'Bad Request'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'
    
    # [DELETE] todos/id
    delete:
      tags:
      - todos
      summary: Delete ToDo By Id
      parameters:
      - name: id
        in: path
        description: ToDo Id
        required: true
      responses:
        200:
          description: 'OK'
        409:
          description: 'Conflict'
        500:
          description: 'Server Error'

# definitions
definitions:
  expenses:
    type: object
    required:
        - title
        - description
        - amount
        - category
        - createdDate
        - updatedDate
        - latitude
        - longitude
    properties:
      title:
        type: string
        description: expense title
      description:
        type: string
        description: expense description
      amount: 
        type: number
        description: expense amount
      category:
        type: string
        description: expense category
      createdDate:
        type: number
        description: expense created date
      updatedDate:
        type: number
        description: expense updated date
      latitude:
        type: number
        description: expense created location latitude
      longitude:
        type: number
        description: expense created location longitude

  todos:
    type: object
    required:
        - title
        - description
        - status
        - category
        - createdDate
        - updatedDate
    properties:
      title:
        type: string
        description: todo title
      description:
        type: string
        description: todo description
      status: 
        type: string
        description: todo amount
      category:
        type: string
        description: todo category
      createdDate:
        type: number
        description: todo created date
      updatedDate:
        type: number
        description: todo updated date

schemes:
 - https
 - http
